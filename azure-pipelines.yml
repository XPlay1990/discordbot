# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
  #install jdk
- bash: 'wget --no-check-certificate -c --header "Cookie: oraclelicense=accept-securebackup-cookie" https://download.oracle.com/java/23/latest/jdk-23_linux-x64_bin.tar.gz'
  displayName: 'Download Oracle JDK 23'
- task: JavaToolInstaller@0
  displayName: 'Install JDK'
  inputs:
    versionSpec: 23
    jdkArchitectureOption: x64
    jdkSourceOption: LocalDirectory
    jdkFile: '$(build.sourcesdirectory)/jdk-23_linux-x64_bin.tar.gz'
    jdkDestinationDirectory: '$(agent.toolsDirectory)/jdk23'

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.23'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'spring-boot:build-image -DskipTests'
    mavenOptions: '-Xmx3072m'
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      [xml]$pomXml = Get-Content .\pom.xml
      # version
      $version=$pomXml.project.version
      Write-Host "##vso[task.setvariable variable=version]$version"
- task: Docker@2
  inputs:
    containerRegistry: 'qdsoftware'
    repository: 'discordbot'
    tags: |
      $(version)
      latest
    command: 'push'